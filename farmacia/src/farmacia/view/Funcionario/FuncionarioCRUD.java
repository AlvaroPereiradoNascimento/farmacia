/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package farmacia.view.Funcionario;
import Verifica.DateValidator;
import farmacia.DAO.FuncionarioDAO;
import farmacia.view.Cliente.FormClienteCRUD;
import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Funcionario;


/**
 *
 * @author Alvaro Pereira do Contratação 
 */
@SuppressWarnings("serial")
public class FuncionarioCRUD extends javax.swing.JFrame {
    

    /**
     * Creates new form FuncionárioCRUD
     */
    public FuncionarioCRUD() {
        initComponents();
        TextFieldID.requestFocus();
    }
    DateValidator d = new DateValidator();
    FuncionarioDAO funcionario = new FuncionarioDAO();
    Funcionario f;
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        buttonGroupFuncionario = new javax.swing.ButtonGroup();
        buttonGroupGerente = new javax.swing.ButtonGroup();
        LabelID = new javax.swing.JLabel();
        TextFieldID = new javax.swing.JTextField();
        LabelNomeUsuario = new javax.swing.JLabel();
        TextFieldNomeUsuario = new javax.swing.JTextField();
        LabelNome = new javax.swing.JLabel();
        TextFieldNome = new javax.swing.JTextField();
        LabelDataAdmissao = new javax.swing.JLabel();
        TextFieldDtAdm = new javax.swing.JTextField();
        LabelSalario = new javax.swing.JLabel();
        TextFieldSalario = new javax.swing.JTextField();
        LabelSenha = new javax.swing.JLabel();
        PasswordFieldSenha = new javax.swing.JPasswordField();
        RadioButtonFuncionario = new javax.swing.JRadioButton();
        RadioButtonGerente = new javax.swing.JRadioButton();
        ButtonCadastra = new javax.swing.JButton();
        ButtonAlterar = new javax.swing.JButton();
        ButtonExcluir = new javax.swing.JButton();
        ButtonConsulta = new javax.swing.JButton();
        ButtonLimpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LabelID.setText("ID:");

        TextFieldID.setEditable(false);
        TextFieldID.setBackground(java.awt.Color.gray);

        LabelNomeUsuario.setText("Nome do Usuário:");

        TextFieldNomeUsuario.setEditable(false);
        TextFieldNomeUsuario.setBackground(java.awt.Color.gray);
        TextFieldNomeUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TextFieldNomeUsuarioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TextFieldNomeUsuarioFocusLost(evt);
            }
        });

        LabelNome.setText("Nome:");

        TextFieldNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TextFieldNomeFocusLost(evt);
            }
        });

        LabelDataAdmissao.setText("Data de admissão:");

        TextFieldDtAdm.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TextFieldDtAdmFocusLost(evt);
            }
        });

        LabelSalario.setText("Salário:");

        TextFieldSalario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TextFieldSalarioFocusLost(evt);
            }
        });

        LabelSenha.setText("Senha:");

        PasswordFieldSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                PasswordFieldSenhaFocusLost(evt);
            }
        });

        RadioButtonFuncionario.setText("Funcionário");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, buttonGroupFuncionario, org.jdesktop.beansbinding.ELProperty.create("${selection.pressed}"), RadioButtonFuncionario, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        RadioButtonFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioButtonFuncionarioActionPerformed(evt);
            }
        });

        RadioButtonGerente.setText("Gerente");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, buttonGroupGerente, org.jdesktop.beansbinding.ELProperty.create("${selection.pressed}"), RadioButtonGerente, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        RadioButtonGerente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioButtonGerenteActionPerformed(evt);
            }
        });

        ButtonCadastra.setText(" Cadastrar");

        ButtonAlterar.setText("Alterar");
        ButtonAlterar.setToolTipText("");

        ButtonExcluir.setText("Excluir");

        ButtonConsulta.setText("Consulta");

        ButtonLimpar.setText("Limpar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LabelNomeUsuario)
                            .addComponent(LabelNome)
                            .addComponent(LabelDataAdmissao)
                            .addComponent(LabelSalario)
                            .addComponent(LabelSenha)
                            .addComponent(LabelID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PasswordFieldSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(TextFieldDtAdm, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                .addComponent(TextFieldSalario, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(TextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextFieldNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ButtonCadastra, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(242, 242, 242))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ButtonAlterar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ButtonExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(ButtonConsulta)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonLimpar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(RadioButtonFuncionario)
                        .addGap(18, 18, 18)
                        .addComponent(RadioButtonGerente)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelID)
                    .addComponent(TextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelNomeUsuario)
                    .addComponent(TextFieldNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelDataAdmissao)
                    .addComponent(TextFieldDtAdm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextFieldSalario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelSalario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelSenha)
                    .addComponent(PasswordFieldSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RadioButtonFuncionario)
                    .addComponent(RadioButtonGerente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonCadastra)
                    .addComponent(ButtonAlterar)
                    .addComponent(ButtonExcluir)
                    .addComponent(ButtonConsulta)
                    .addComponent(ButtonLimpar))
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RadioButtonFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioButtonFuncionarioActionPerformed
        // TODO add your handling code here:,
        if (RadioButtonGerente.isSelected()){
        RadioButtonGerente.setSelected(false);
        }
    }//GEN-LAST:event_RadioButtonFuncionarioActionPerformed

    private void RadioButtonGerenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioButtonGerenteActionPerformed
        // TODO add your handling code here:
        if (RadioButtonFuncionario.isSelected()){
        RadioButtonFuncionario.setSelected(false);
        }
    }//GEN-LAST:event_RadioButtonGerenteActionPerformed

    private void TextFieldNomeUsuarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextFieldNomeUsuarioFocusLost
        // TODO add your handling code here:
        if (TextFieldNome.getText().length() != 0 ){
            String nome = GeraUsuario(TextFieldNome.getText());
            TextFieldNomeUsuario.setText(nome);
            List<Funcionario> vfuncionarios = new ArrayList<>();
            try {
                vfuncionarios = funcionario.listargera(nome);
            } catch (SQLException ex) {
                Logger.getLogger(FuncionarioCRUD.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this,"Problema de conexão com o banco.\n"+ ex,"erro Banco",JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException ex) {
                 JOptionPane.showMessageDialog(this,"Problema de conversão.\n"+ ex,"erro conversão",JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FuncionarioCRUD.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(vfuncionarios.size()> 0){
                int i = vfuncionarios.size() ;
                TextFieldNomeUsuario.setText(nome+i);
            }else TextFieldNomeUsuario.setText(nome);
            TextFieldNome.requestFocus();
        }else TextFieldNome.requestFocus();
    }//GEN-LAST:event_TextFieldNomeUsuarioFocusLost

    private void TextFieldNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextFieldNomeFocusLost
        // TODO add your handling code here:
        if (TextFieldNome.isEditable() && (!TextFieldID.isEditable())){
            if( TextFieldNome.getText().length() == 0 ){
                        JOptionPane.showMessageDialog(this.TextFieldNome, "Campo nome vazio.","Nome", JOptionPane.ERROR_MESSAGE);
                        TextFieldNome.requestFocus();
                    }
            else if(matchesOnlyText(TextFieldNome.getText())) {
                String nome = toTitledCase(TextFieldNome.getText());
                TextFieldNome.setText(nome);
                if(TextFieldNomeUsuario.getText().length() == 0 )TextFieldNomeUsuario.requestFocus();
                
                                    
            }else {
                JOptionPane.showMessageDialog(this.TextFieldNome, "Nome possui números ou dados inelegiveis","Nome com números.", JOptionPane.ERROR_MESSAGE);
                TextFieldNome.requestFocus();
                TextFieldNome.setText(null);
            }   
            
        }
        
    }//GEN-LAST:event_TextFieldNomeFocusLost

    private void TextFieldDtAdmFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextFieldDtAdmFocusLost
        // TODO add your handling code here:
        if (TextFieldDtAdm.isEditable()){
            int date=0;
            if(TextFieldNome.getText().length() != 0){
                if (TextFieldNomeUsuario.getText().length()!= 0){
                   if (TextFieldDtAdm.getText().length()> 3 || TextFieldDtAdm.getText().length()< 11){
                    if(TextFieldDtAdm.getText().length()== 8){
                        try {
                          date = Integer.parseInt(TextFieldDtAdm.getText());
                            int ano = date%10000;
                            int dia = date/1000000;
                            date /= 10000;
                            int mes = date%100;
                            if (mes <10){
                              TextFieldDtAdm.setText(dia+"/0"+mes+"/"+ano);  
                            }
                           else TextFieldDtAdm.setText(dia+"/"+mes+"/"+ano);
                        }catch (NumberFormatException e) {
                           JOptionPane.showMessageDialog(this.TextFieldDtAdm, "Campo data de contratação  com formato inválido.","Data de Contratação ", JOptionPane.ERROR_MESSAGE);
                           TextFieldDtAdm.requestFocus();
                           TextFieldDtAdm.setText("dd/mm/aaaa");
                           TextFieldDtAdm.setText("dia/mes/ano");
                           TextFieldDtAdm.selectAll();
                        }
                    }else if (TextFieldDtAdm.getText().length()== 10){
                            if(!d.data(TextFieldDtAdm.getText())){
                               JOptionPane.showMessageDialog(this.TextFieldDtAdm, "Campo data de contratação  com formato inválido.","Data de Contratação ", JOptionPane.ERROR_MESSAGE);
                               TextFieldDtAdm.requestFocus();
                               TextFieldDtAdm.setText("dd/mm/aaaa");
                               TextFieldDtAdm.setText("dia/mes/ano");
                               TextFieldDtAdm.selectAll();
                            }
                    }else if (TextFieldDtAdm.getText().length()== 6){
                        try {
                            date = Integer.parseInt(TextFieldDtAdm.getText());
                            int ano = date%100;
                            int dia = date/10000;
                            date /= 100;
                            int mes = date%100;
                            if (ano < 100 && ano > 60 ) ano+=1900;
                            else ano += 2000;
                            TextFieldDtAdm.setText(dia+"/0"+mes+"/"+ano);
                        } catch (NumberFormatException e) {
                           JOptionPane.showMessageDialog(this.TextFieldDtAdm, "Campo data de contratação  com formato inválido.","Data de Contratação ", JOptionPane.ERROR_MESSAGE);
                           TextFieldDtAdm.requestFocus();
                           TextFieldDtAdm.setText("dd/mm/aaaa");
                           TextFieldDtAdm.setText("dia/mes/ano");
                           TextFieldDtAdm.selectAll();
                        }
                    }else if (TextFieldDtAdm.getText().length()== 4){
                        try {
                            date = Integer.parseInt(TextFieldDtAdm.getText());
                            int ano = date%100;
                            int dia = date/1000;
                            date /= 100;
                            int mes = date%10;
                            if (mes <10 && dia < 10&& (ano < 100 && ano > 60 )){
                                    ano+=1900;
                                    TextFieldDtAdm.setText("0"+dia+"/0"+mes+"/"+ano);  
                                }
                        } catch (NumberFormatException e) {
                           JOptionPane.showMessageDialog(this.TextFieldDtAdm, "Campo data de contratação  com formato inválido.","Data de Contratação ", JOptionPane.ERROR_MESSAGE);
                           TextFieldDtAdm.requestFocus();
                           TextFieldDtAdm.setText("dd/mm/aaaa");
                           TextFieldDtAdm.setText("dia/mes/ano");
                           TextFieldDtAdm.selectAll();
                        }

                    }else if (TextFieldDtAdm.getText().length()== 5){
                       JOptionPane.showMessageDialog(this.TextFieldDtAdm, "Campo data de contratação  com formato inválido.","Data de Contratação ", JOptionPane.ERROR_MESSAGE);
                       TextFieldDtAdm.requestFocus();
                       TextFieldDtAdm.setText("dd/mm/aaaa");
                       TextFieldDtAdm.setText("dia/mes/ano");
                       TextFieldDtAdm.selectAll();
                    }else {
                        JOptionPane.showMessageDialog(this.TextFieldDtAdm, "Campo data de contratação  com formato inválido.","Data de Contratação ", JOptionPane.ERROR_MESSAGE);
                        TextFieldDtAdm.requestFocus();
                        TextFieldDtAdm.setText("dia/mes/ano");
                        TextFieldDtAdm.selectAll();
                    }   
                    }else {
                    JOptionPane.showMessageDialog(this.TextFieldDtAdm, "Campo data de contratação  com formato inválido.","Data de Contratação ", JOptionPane.ERROR_MESSAGE);
                    TextFieldDtAdm.requestFocus();
                     } 
                }else TextFieldNomeUsuario.requestFocus();
               
            }else TextFieldNome.requestFocus();
        }   
    }//GEN-LAST:event_TextFieldDtAdmFocusLost

    private void TextFieldSalarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextFieldSalarioFocusLost
        // TODO add your handling code here:
        if (TextFieldSalario.isEditable()){
            if (TextFieldDtAdm.getText().length()!= 0 && TextFieldNomeUsuario.getText().length() != 0){
                if (TextFieldSalario.getText().length() != 0){
                    if (ConverteVirgula(TextFieldSalario.getText())== 0.0){
                        JOptionPane.showMessageDialog(this.TextFieldSalario, "Campo salário possui dados inválidos.","Salário", JOptionPane.ERROR_MESSAGE);
                        TextFieldSalario.requestFocus();
                    }else {
                        double registra = ConverteVirgula(TextFieldSalario.getText());
                        TextFieldSalario.setText(String.valueOf(registra));                        
                    }
                }else {
                    JOptionPane.showMessageDialog(this.TextFieldSalario, "Campo salário esta vazio.","Salário", JOptionPane.ERROR_MESSAGE);
                    TextFieldSalario.requestFocus();
                    }   
            }else {
                if(TextFieldNomeUsuario.getText() == null )TextFieldNomeUsuario.requestFocus();
                else TextFieldDtAdm.requestFocus();
            }
        }
    }//GEN-LAST:event_TextFieldSalarioFocusLost

    private void PasswordFieldSenhaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PasswordFieldSenhaFocusLost
        // TODO add your handling code here:
        if (PasswordFieldSenha.isEditable()){
             if (TextFieldSalario.getText().length()!= 0){
                 if (PasswordFieldSenha.getPassword() == null ){
                     JOptionPane.showMessageDialog(this.PasswordFieldSenha, "Campo senha esta vazio.","Senha", JOptionPane.ERROR_MESSAGE);
                    PasswordFieldSenha.requestFocus();
                 }
             }else  TextFieldSalario.requestFocus();
        }
    }//GEN-LAST:event_PasswordFieldSenhaFocusLost

    private void TextFieldNomeUsuarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TextFieldNomeUsuarioFocusGained
        // TODO add your handling code here:
        if(TextFieldNome.getText().length() == 0 )TextFieldNome.requestFocus();
        else if(TextFieldDtAdm.getText().length() == 0) TextFieldDtAdm.requestFocus();
        else if(TextFieldSalario.getText().length() == 0)TextFieldSalario.requestFocus();
    }//GEN-LAST:event_TextFieldNomeUsuarioFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FuncionarioCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FuncionarioCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FuncionarioCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FuncionarioCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FuncionarioCRUD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonAlterar;
    private javax.swing.JButton ButtonCadastra;
    private javax.swing.JButton ButtonConsulta;
    private javax.swing.JButton ButtonExcluir;
    private javax.swing.JButton ButtonLimpar;
    private javax.swing.JLabel LabelDataAdmissao;
    private javax.swing.JLabel LabelID;
    private javax.swing.JLabel LabelNome;
    private javax.swing.JLabel LabelNomeUsuario;
    private javax.swing.JLabel LabelSalario;
    private javax.swing.JLabel LabelSenha;
    private javax.swing.JPasswordField PasswordFieldSenha;
    private javax.swing.JRadioButton RadioButtonFuncionario;
    private javax.swing.JRadioButton RadioButtonGerente;
    private javax.swing.JTextField TextFieldDtAdm;
    private javax.swing.JTextField TextFieldID;
    private javax.swing.JTextField TextFieldNome;
    private javax.swing.JTextField TextFieldNomeUsuario;
    private javax.swing.JTextField TextFieldSalario;
    private javax.swing.ButtonGroup buttonGroupFuncionario;
    private javax.swing.ButtonGroup buttonGroupGerente;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void limpar() {
        TextFieldID.setText(null); 
        TextFieldNomeUsuario.setText(null);
        TextFieldNome.setText(null);
        TextFieldDtAdm.setText(null);
        TextFieldSalario.setText(null);
        PasswordFieldSenha.setText(null);
        
        
    }
    /**
     * Deixar campos editaveis de acordo com padrão
     */
    public void Editavel(){
            if (!(TextFieldID.isEditable()) && (TextFieldNome.isEditable())){
                TextFieldID.setBackground(Color.white);
                TextFieldID.setEditable(true);
                TextFieldNome.setBackground(Color.gray);  
                TextFieldNome.setEditable(false);
                TextFieldNomeUsuario.setBackground(Color.gray);  
                TextFieldNomeUsuario.setEditable(false);
                TextFieldDtAdm.setBackground(Color.gray);  
                TextFieldDtAdm.setEditable(false);
                TextFieldSalario.setBackground(Color.gray);  
                TextFieldSalario.setEditable(false);
                PasswordFieldSenha.setBackground(Color.gray);  
                PasswordFieldSenha.setEditable(false);

            }else {
                TextFieldID.setBackground(Color.gray);
                TextFieldID.setEditable(false);
                TextFieldNome.setBackground(Color.white);  
                TextFieldNome.setEditable(true);
                TextFieldNomeUsuario.setBackground(Color.white);  
                TextFieldNomeUsuario.setEditable(true);
                TextFieldDtAdm.setBackground(Color.white);  
                TextFieldDtAdm.setEditable(true);
                TextFieldSalario.setBackground(Color.white);  
                TextFieldSalario.setEditable(true);
                PasswordFieldSenha.setBackground(Color.white);  
                PasswordFieldSenha.setEditable(true);

            }

        }
   public boolean matchesOnlyText(String text) {
    return text.matches("[A-Z_a-z_À-ú\\s\\p{L}]+");
    }
    /**
     *
     * @param str
     * @return  primeira letra de cada palavra com em maiuscula exceto para sílabas
     */
    public static String toTitledCase(String str){

    String[] words = str.split(" ");
    StringBuilder sb = new StringBuilder();
  
    for(int i = 0; i < words.length; i++){
        String[] word= words[i].split("\\s");
        if (words[i].length() > 2){
            for (int y = 0;y<word.length;y++){
            sb.append(word[y].substring(0, 1).toUpperCase() + word[y].substring(1).toLowerCase());
            sb.append(" ");  
            }
        } else {
            sb.append(words[i]);
            sb.append(" ");      
        }
    }

    return sb.toString().substring (0, sb.length() - 1);
    }
    public String GeraUsuario(String nome){
        String[] words = nome.split(" ");
        return words[0] +"."+ words[words.length-1];
        
    }
    public double ConverteVirgula(String valor){
        String replace = valor.replace(",",".");
        try{
            return Double.parseDouble(replace);
        }catch(NumberFormatException e){
            return 0.0 ;
        }
        
        
    }
    public String ConvertePonto(double valor){
        String replace = Double.toString(valor);
         return replace = replace.replace(".",",");
    }

}
